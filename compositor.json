{
  "name": "AMCorvi/Corvi-Vim-Config",
  "version": "0.1.4",
  "libraries": {
    "xv": "^1.1.25"
  },
  "title": "",
  "branch": "",
  "style": {
    "name": "Williamsburg",
    "componentSet": {
      "nav": "nav/BasicNav",
      "header": "header/LightBannerHeader",
      "article": "article/ReaderArticle",
      "footer": "footer/BasicFooter"
    },
    "fontFamily": "Montserrat, sans-serif",
    "heading": {
      "fontWeight": 600,
      "letterSpacing": "0.1em"
    },
    "colors": {
      "text": "#346",
      "background": "#fff",
      "primary": "#0099e0",
      "secondary": "#ab61ff",
      "highlight": "#f7b",
      "muted": "#fffab3",
      "border": "#ccd"
    }
  },
  "content": [
    {
      "component": "nav",
      "links": [
        {
          "href": "https://github.com/AMCorvi/Corvi-Vim-Config",
          "text": "GitHub"
        }
      ]
    },
    {
      "component": "header",
      "heading": "Corvi-Vim-Config",
      "subhead": null,
      "children": [
        {
          "component": "ui/TweetButton",
          "text": "Corvi-Vim-Config: ",
          "url": null
        },
        {
          "component": "ui/GithubButton",
          "user": "AMCorvi",
          "repo": "Corvi-Vim-Config"
        }
      ]
    },
    {
      "component": "article",
      "metadata": {
        "source": "github.readme"
      },
      "html": "<h1>The clutch vimrc</h1>\n<p>Over the last 8 years @amix has used and tweaked Vim. This is @amix&apos;s Ultimate vimrc. My self being new to vim has decided to start where he has left off on a wild experiment to build on that tool and carry it into the new realm of asyncronous vim editing with neovim!!!!! </p>\n<h2>Note</h2>\n<ul>\n<li>This is a work in progress... &#x1F64A;</li>\n</ul>\n<h2>How to install ?</h2>\n<p>The awesome version includes a lot of great plugins, configurations and color schemes that make Vim a lot better. To install it simply do following:</p>\n<pre>git clone http<span class=\"hljs-variable\">s:</span>//github.<span class=\"hljs-keyword\">com</span>/AMCorvi/Corvi-Vim-Config.git\n<span class=\"hljs-keyword\">sh</span> ~/.vim_runtime/install_awesome_vimrc.<span class=\"hljs-keyword\">sh</span></pre><p>I also recommend using <a href=\"http://store1.adobe.com/cfusion/store/html/index.cfm?event=displayFontPackage&amp;code=1960\">Source Code Pro font from Adobe</a> (it&apos;s free and awesome font for writing and programming). The Awesome vimrc is already setup to try to use it</p>\n<h2>How to install on Windows?</h2>\n<p>Use <a href=\"http://msysgit.github.com/\">msysgit</a> to checkout the repository and run the installation instructions above. No special instructions needed ;-)</p>\n<h2>How to install on Linux</h2>\n<p>If you have vim aliased as <code>vi</code> instead of <code>vim</code>, make sure to either alias it: <code>alias vi=vim</code>. Otherwise, <code>apt-get install vim</code></p>\n<h2>How to update to latest version?</h2>\n<p>Simply just do a git rebase!</p>\n<pre>cd ~/<span class=\"hljs-selector-class\">.vim_runtime</span>\ngit pull --rebase</pre><h2>Some screenshots</h2>\n<p>Colors when editing a Python file:\n<img src=\"http://files1.wedoist.com/e952fdb343b1e617b90d256e474d0370/as/screenshot_1.png\"></p>\n<p>Opening recently opened files <a href=\"https://github.com/vim-scripts/mru.vim\">mru.vim</a>:\n<img src=\"http://files1.wedoist.com/1967b0e48af40e513d1a464e08196990/as/screenshot_2.png\"></p>\n<p><a href=\"https://github.com/scrooloose/nerdtree\">NERD Tree</a> plugin in a terminal window:\n<img src=\"http://files1.wedoist.com/b1509d7ed9e9f357e8d04797f9fad67b/as/screenshot3.png\"></p>\n<p>This vimrc even works on Windows!\n<img src=\"http://files1.wedoist.com/4e85163d97b81422240c822c82022f2f/as/screenshot_4.png\"></p>\n<p>Distraction free mode using <a href=\"https://github.com/junegunn/goyo.vim\">goyo.vim</a> and <a href=\"https://github.com/amix/vim-zenroom2\">vim-zenroom2</a>:\n<img src=\"https://d2dq6e731uoz0t.cloudfront.net/a5182977c3d6c2a6cd3f9e97398ca8ca/as/zen_mode.jpg\"></p>\n<h2>Included Plugins</h2>\n<p>I recommend reading the docs of these plugins to understand them better. Each of them provide a much better Vim experience!</p>\n<ul>\n<li><a href=\"https://github.com/tpope/vim-pathogen\">pathogen.vim</a>: Manages the runtime path of the plugins</li>\n<li><a href=\"https://github.com/garbas/vim-snipmate\">snipMate.vim</a>: snipMate.vim aims to be a concise vim script that implements some of TextMate&apos;s snippets features in Vim</li>\n<li><a href=\"https://github.com/vim-scripts/bufexplorer.zip\">bufexplorer.zip</a>: Buffer Explorer / Browser. This plugin can be opened with <code>&lt;leader+o&gt;</code></li>\n<li><a href=\"https://github.com/scrooloose/nerdtree\">NERD Tree</a>: A tree explorer plugin for vim</li>\n<li><a href=\"https://github.com/mileszs/ack.vim\">ack.vim</a>: Vim plugin for the Perl module / CLI script &apos;ack&apos;</li>\n<li><a href=\"https://github.com/rking/ag.vim\">ag.vim</a>: A much faster Ack</li>\n<li><a href=\"https://github.com/ctrlpvim/ctrlp.vim\">ctrlp.vim</a>: Fuzzy file, buffer, mru and tag finder. In @amix&apos;s config it&apos;s mapped to <code>&lt;Ctrl+F&gt;</code>, because <code>&lt;Ctrl+P&gt;</code> is used by YankRing</li>\n<li><a href=\"https://github.com/vim-scripts/mru.vim\">mru.vim</a>: Plugin to manage Most Recently Used (MRU) files. Includes @amix&apos;s own fork which adds syntax highlighting to MRU. This plugin can be opened with <code>&lt;leader+f&gt;</code></li>\n<li><a href=\"https://github.com/amix/open_file_under_cursor.vim\">open_file_under_cursor.vim</a>: Open file under cursor when pressing <code>gf</code></li>\n<li><a href=\"https://github.com/michaeljsmith/vim-indent-object\">vim-indent-object</a>: Defines a new text object representing lines of code at the same indent level. Useful for python/vim scripts</li>\n<li><a href=\"https://github.com/terryma/vim-multiple-cursors\">vim-multiple-cursors</a>: Sublime Text style multiple selections for Vim, CTRL+N is remapped to CTRL+S (due to YankRing)</li>\n<li><a href=\"https://github.com/terryma/vim-expand-region\">vim-expand-region</a>: Allows you to visually select increasingly larger regions of text using the same key combination.</li>\n<li><a href=\"https://github.com/tpope/vim-fugitive\">vim-fugitive</a>: A Git wrapper so awesome, it should be illegal</li>\n<li><a href=\"https://github.com/junegunn/goyo.vim\">goyo.vim</a> and <a href=\"https://github.com/amix/vim-zenroom2\">vim-zenroom2</a>: \nRemove all clutter and focus only on the essential. Similar to iA Writer or Write Room <a href=\"http://amix.dk/blog/post/19744\">Read more here</a></li>\n<li><a href=\"https://github.com/tpope/vim-commentary\">vim-commentary</a>: Comment stuff out.  Use <code>gcc</code> to comment out a line (takes a count), <code>gc</code> to comment out the target of a motion. <code>gcu</code> uncomments a set of adjacent commented lines.</li>\n<li><a href=\"https://github.com/scrooloose/syntastic\">syntastic</a>: Syntax checking hacks for vim</li>\n<li><a href=\"https://github.com/maxbrunsfeld/vim-yankstack\">vim-yankstack</a>: Maintains a history of previous yanks, changes and deletes</li>\n<li><a href=\"https://github.com/itchyny/lightline.vim\">lightline.vim</a>: A light and configurable statusline/tabline for Vim</li>\n</ul>\n<h2>Included color schemes</h2>\n<ul>\n<li><a href=\"https://github.com/vim-scripts/peaksea\">peaksea</a>: @amix&apos;s favorite!</li>\n<li><a href=\"https://github.com/altercation/vim-colors-solarized\">vim-colors-solarized</a></li>\n<li><a href=\"https://github.com/wgibbs/vim-irblack\">vim-irblack</a></li>\n<li><a href=\"https://github.com/vim-scripts/mayansmoke\">mayansmoke</a></li>\n<li><a href=\"https://github.com/therubymug/vim-pyte\">vim-pyte</a></li>\n</ul>\n<h2>Included modes</h2>\n<ul>\n<li><a href=\"https://github.com/kchmck/vim-coffee-script\">vim-coffee-script</a></li>\n<li><a href=\"https://github.com/groenewege/vim-less\">vim-less</a></li>\n<li><a href=\"https://github.com/sophacles/vim-bundle-mako\">vim-bundle-mako</a></li>\n<li><a href=\"https://github.com/tpope/vim-markdown\">vim-markdown</a></li>\n<li><a href=\"https://github.com/vim-scripts/nginx.vim\">nginx.vim</a>: Highlights configuration files for nginx</li>\n<li><a href=\"https://github.com/fatih/vim-go\">vim-go</a></li>\n</ul>\n<h2>How to include your own stuff?</h2>\n<p>After you have installed the setup you can create <strong>~/.vim_runtime/my_configs.vim</strong> to fill in any configurations that are important for you. For instance, my <strong>my_configs.vim</strong> looks like this:</p>\n<pre>~/.vim_runtime (master)&gt; <span class=\"hljs-keyword\">cat</span> my_configs.<span class=\"hljs-keyword\">vim</span>\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span>ct :<span class=\"hljs-keyword\">cd</span> ~/Desktop/Todoist/todoist<span class=\"hljs-symbol\">&lt;cr&gt;</span>\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-keyword\">cw</span> :<span class=\"hljs-keyword\">cd</span> ~/Desktop/Wedoist/wedoist<span class=\"hljs-symbol\">&lt;cr&gt;</span> </pre><p>You can also install your own plugins, for instance, via pathogen we can install <a href=\"https://github.com/tpope/vim-rails\">vim-rails</a>:</p>\n<pre><span class=\"hljs-keyword\">cd</span> ~/.vim_runtime\ngit clone gi<span class=\"hljs-variable\">t:</span>//github.<span class=\"hljs-keyword\">com</span>/tpope/<span class=\"hljs-keyword\">vim</span>-rails.git sources_non_forked/<span class=\"hljs-keyword\">vim</span>-rails</pre><p>Now you have vim-rails installed ;-)</p>\n<h2>Key Mappings</h2>\n<h3>Plugin related mappings</h3>\n<p>Open <a href=\"https://github.com/vim-scripts/bufexplorer.zip\">bufexplorer</a> and see and manage the current buffers (<code>&lt;leader&gt;o</code>):</p>\n<pre>map &lt;leader&gt;o <span class=\"hljs-symbol\">:BufExplorer&lt;cr&gt;</span></pre><p>Open <a href=\"https://github.com/vim-scripts/mru.vim\">MRU.vim</a> and see the recently open files (<code>&lt;leader&gt;f</code>):</p>\n<pre>map &lt;leader&gt;f <span class=\"hljs-symbol\">:MRU&lt;CR&gt;</span></pre><p>Open <a href=\"https://github.com/kien/ctrlp.vim\">ctrlp.vim</a> plugin (<code>&lt;leader&gt;j</code> or <code>&lt;ctrl&gt;f</code>):</p>\n<pre><span class=\"hljs-keyword\">let</span> g:ctrlp_map = <span class=\"hljs-comment\">&apos;<span class=\"hljs-doctag\">&lt;c-f&gt;</span>&apos;</span></pre><p>Managing the <a href=\"https://github.com/scrooloose/nerdtree\">NERD Tree</a> plugin:</p>\n<pre><span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-keyword\">nn</span> :NERDTreeToggle<span class=\"hljs-symbol\">&lt;cr&gt;</span>\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-keyword\">nb</span> :NERDTreeFromBookmark \n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span>nf :NERDTreeFind<span class=\"hljs-symbol\">&lt;cr&gt;</span></pre><p><a href=\"https://github.com/junegunn/goyo.vim\">goyo.vim</a> and <a href=\"https://github.com/amix/vim-zenroom2\">vim-zenroom2</a> lets you only focus on one thing at a time. It removes all the distractions and centers the content. It has a special look when editing Markdown, reStructuredText and textfiles. It only has one mapping. (<code>&lt;leader&gt;z</code>)</p>\n<pre>map &lt;leader&gt;z <span class=\"hljs-symbol\">:Goyo&lt;cr&gt;</span></pre><h3>Normal mode mappings</h3>\n<p>Fast saving of a buffer (<code>&lt;leader&gt;w</code>):</p>\n<pre>nmap &lt;leader&gt;w <span class=\"hljs-symbol\">:w!&lt;cr&gt;</span></pre><p>Map <code>&lt;Space&gt;</code> to <code>/</code> (search) and <code>&lt;Ctrl&gt;+&lt;Space&gt;</code> to <code>?</code> (backwards search):</p>\n<pre><span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;space&gt;</span> /\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;c-space&gt;</span> ?\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;silent&gt;</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-symbol\">&lt;cr&gt;</span> :<span class=\"hljs-keyword\">noh</span><span class=\"hljs-symbol\">&lt;cr&gt;</span></pre><p>Disable highlight when <code>&lt;leader&gt;&lt;cr&gt;</code> is pressed:</p>\n<pre><span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;silent&gt;</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-symbol\">&lt;cr&gt;</span> :<span class=\"hljs-keyword\">noh</span><span class=\"hljs-symbol\">&lt;cr&gt;</span></pre><p>Smart way to move between windows (<code>&lt;ctrl&gt;j</code> etc.):</p>\n<pre><span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;C-j&gt;</span> <span class=\"hljs-symbol\">&lt;C-W&gt;</span><span class=\"hljs-keyword\">j</span>\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;C-k&gt;</span> <span class=\"hljs-symbol\">&lt;C-W&gt;</span><span class=\"hljs-keyword\">k</span>\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;C-h&gt;</span> <span class=\"hljs-symbol\">&lt;C-W&gt;</span>h\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;C-l&gt;</span> <span class=\"hljs-symbol\">&lt;C-W&gt;</span><span class=\"hljs-keyword\">l</span></pre><p>Closing of current buffer(s) (<code>&lt;leader&gt;bd</code> and (<code>&lt;leader&gt;ba</code>)):</p>\n<pre><span class=\"hljs-comment\">&quot; Close current buffer</span>\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-keyword\">bd</span> :Bclose<span class=\"hljs-symbol\">&lt;cr&gt;</span>\n\n<span class=\"hljs-comment\">&quot; Close all buffers</span>\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-keyword\">ba</span> :<span class=\"hljs-number\">1</span>,<span class=\"hljs-number\">1000</span> bd!<span class=\"hljs-symbol\">&lt;cr&gt;</span></pre><p>Useful mappings for managing tabs:</p>\n<pre><span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-keyword\">tn</span> :<span class=\"hljs-keyword\">tabnew</span><span class=\"hljs-symbol\">&lt;cr&gt;</span>\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-keyword\">to</span> :<span class=\"hljs-keyword\">tabonly</span><span class=\"hljs-symbol\">&lt;cr&gt;</span>\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-keyword\">tc</span> :<span class=\"hljs-keyword\">tabclose</span><span class=\"hljs-symbol\">&lt;cr&gt;</span>\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-keyword\">tm</span> :<span class=\"hljs-keyword\">tabmove</span> \n\n<span class=\"hljs-comment\">&quot; Opens a new tab with the current buffer&apos;s path</span>\n<span class=\"hljs-comment\">&quot; Super useful when editing files in the same directory</span>\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-keyword\">te</span> :<span class=\"hljs-keyword\">tabedit</span> <span class=\"hljs-symbol\">&lt;c-r&gt;</span>=<span class=\"hljs-built_in\">expand</span>(<span class=\"hljs-string\">&quot;%:p:h&quot;</span>)<span class=\"hljs-symbol\">&lt;cr&gt;</span>/</pre><p>Switch CWD to the directory of the open buffer:</p>\n<pre>map &lt;leader&gt;cd <span class=\"hljs-symbol\">:cd</span> %<span class=\"hljs-symbol\">:p</span><span class=\"hljs-symbol\">:h&lt;cr&gt;</span><span class=\"hljs-symbol\">:pwd&lt;cr&gt;</span></pre><p>Open vimgrep and put the cursor in the right position:</p>\n<pre><span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span>g :<span class=\"hljs-keyword\">vimgrep</span> // **/*.<span class=\"hljs-symbol\">&lt;left&gt;</span><span class=\"hljs-symbol\">&lt;left&gt;</span><span class=\"hljs-symbol\">&lt;left&gt;</span><span class=\"hljs-symbol\">&lt;left&gt;</span><span class=\"hljs-symbol\">&lt;left&gt;</span><span class=\"hljs-symbol\">&lt;left&gt;</span><span class=\"hljs-symbol\">&lt;left&gt;</span></pre><p>Vimgreps in the current file:</p>\n<pre><span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-symbol\">&lt;space&gt;</span> :<span class=\"hljs-keyword\">vimgrep</span> // <span class=\"hljs-symbol\">&lt;C-R&gt;</span>%<span class=\"hljs-symbol\">&lt;C-A&gt;</span><span class=\"hljs-symbol\">&lt;right&gt;</span><span class=\"hljs-symbol\">&lt;right&gt;</span><span class=\"hljs-symbol\">&lt;right&gt;</span><span class=\"hljs-symbol\">&lt;right&gt;</span><span class=\"hljs-symbol\">&lt;right&gt;</span><span class=\"hljs-symbol\">&lt;right&gt;</span><span class=\"hljs-symbol\">&lt;right&gt;</span><span class=\"hljs-symbol\">&lt;right&gt;</span><span class=\"hljs-symbol\">&lt;right&gt;</span></pre><p>Remove the Windows ^M - when the encodings gets messed up:</p>\n<pre><span class=\"hljs-keyword\">noremap</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-keyword\">m</span> mmHm<span class=\"hljs-variable\">t:</span>%s/<span class=\"hljs-symbol\">&lt;C-V&gt;</span><span class=\"hljs-symbol\">&lt;cr&gt;</span>//ge<span class=\"hljs-symbol\">&lt;cr&gt;</span><span class=\"hljs-string\">&apos;tzt&apos;</span><span class=\"hljs-keyword\">m</span></pre><p>Quickly open a buffer for scripbble:</p>\n<pre><span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span>q :<span class=\"hljs-keyword\">e</span> ~/<span class=\"hljs-keyword\">buffer</span><span class=\"hljs-symbol\">&lt;cr&gt;</span></pre><p>Toggle paste mode on and off:</p>\n<pre><span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-keyword\">pp</span> :<span class=\"hljs-keyword\">setlocal</span> paste!<span class=\"hljs-symbol\">&lt;cr&gt;</span></pre><h3>Insert mode mappings</h3>\n<p>Quickly insert parenthesis/brackets/etc.:</p>\n<pre>inoremap <span class=\"hljs-variable\">$1</span> ()<span class=\"hljs-variable\">&lt;esc&gt;</span>i\ninoremap <span class=\"hljs-variable\">$2</span> []<span class=\"hljs-variable\">&lt;esc&gt;</span>i\ninoremap <span class=\"hljs-variable\">$3</span> {}<span class=\"hljs-variable\">&lt;esc&gt;</span>i\ninoremap <span class=\"hljs-variable\">$4</span> {<span class=\"hljs-variable\">&lt;esc&gt;</span>o}<span class=\"hljs-variable\">&lt;esc&gt;</span>O\ninoremap <span class=\"hljs-variable\">$q</span> &apos;&apos;<span class=\"hljs-variable\">&lt;esc&gt;</span>i\ninoremap <span class=\"hljs-variable\">$e</span> <span class=\"hljs-string\">&quot;&quot;</span><span class=\"hljs-variable\">&lt;esc&gt;</span>i\ninoremap <span class=\"hljs-variable\">$t</span> <span class=\"hljs-variable\">&lt;&gt;</span><span class=\"hljs-variable\">&lt;esc&gt;</span>i</pre><p>Insert the current date and time (useful for timestamps):</p>\n<pre>iab xdate &lt;c-r&gt;=strftime(<span class=\"hljs-string\">&quot;%d/%m/%y %H:%M:%S&quot;</span>)&lt;cr&gt;</pre><h3>Visual mode mappings</h3>\n<p>Visual mode pressing <code>*</code> or <code>#</code> searches for the current selection:</p>\n<pre><span class=\"hljs-keyword\">vnoremap</span> <span class=\"hljs-symbol\">&lt;silent&gt;</span> * :<span class=\"hljs-keyword\">call</span> VisualSelection(<span class=\"hljs-string\">&apos;f&apos;</span>)<span class=\"hljs-symbol\">&lt;CR&gt;</span>\n<span class=\"hljs-keyword\">vnoremap</span> <span class=\"hljs-symbol\">&lt;silent&gt;</span> # :<span class=\"hljs-keyword\">call</span> VisualSelection(<span class=\"hljs-string\">&apos;b&apos;</span>)<span class=\"hljs-symbol\">&lt;CR&gt;</span></pre><p>When you press gv you vimgrep after the selected text:</p>\n<pre><span class=\"hljs-keyword\">vnoremap</span> <span class=\"hljs-symbol\">&lt;silent&gt;</span> <span class=\"hljs-keyword\">gv</span> :<span class=\"hljs-keyword\">call</span> VisualSelection(<span class=\"hljs-string\">&apos;gv&apos;</span>)<span class=\"hljs-symbol\">&lt;CR&gt;</span></pre><p>When you press <code>&lt;leader&gt;r</code> you can search and replace the selected text:</p>\n<pre><span class=\"hljs-keyword\">vnoremap</span> <span class=\"hljs-symbol\">&lt;silent&gt;</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span>r :<span class=\"hljs-keyword\">call</span> VisualSelection(<span class=\"hljs-string\">&apos;replace&apos;</span>)<span class=\"hljs-symbol\">&lt;CR&gt;</span></pre><p>Surround the visual selection in parenthesis/brackets/etc.:</p>\n<pre><span class=\"hljs-keyword\">vnoremap</span> $<span class=\"hljs-number\">1</span> <span class=\"hljs-symbol\">&lt;esc&gt;</span>`&gt;<span class=\"hljs-keyword\">a</span>)<span class=\"hljs-symbol\">&lt;esc&gt;</span>`&lt;i(<span class=\"hljs-symbol\">&lt;esc&gt;</span>\n<span class=\"hljs-keyword\">vnoremap</span> $<span class=\"hljs-number\">2</span> <span class=\"hljs-symbol\">&lt;esc&gt;</span>`&gt;<span class=\"hljs-keyword\">a</span>]<span class=\"hljs-symbol\">&lt;esc&gt;</span>`&lt;i[<span class=\"hljs-symbol\">&lt;esc&gt;</span>\n<span class=\"hljs-keyword\">vnoremap</span> $<span class=\"hljs-number\">3</span> <span class=\"hljs-symbol\">&lt;esc&gt;</span>`&gt;<span class=\"hljs-keyword\">a</span>}<span class=\"hljs-symbol\">&lt;esc&gt;</span>`&lt;i{<span class=\"hljs-symbol\">&lt;esc&gt;</span>\n<span class=\"hljs-keyword\">vnoremap</span> $$ <span class=\"hljs-symbol\">&lt;esc&gt;</span>`&gt;<span class=\"hljs-keyword\">a</span><span class=\"hljs-string\">&quot;&lt;esc&gt;`&lt;i&quot;</span><span class=\"hljs-symbol\">&lt;esc&gt;</span>\n<span class=\"hljs-keyword\">vnoremap</span> $q <span class=\"hljs-symbol\">&lt;esc&gt;</span>`&gt;<span class=\"hljs-keyword\">a</span><span class=\"hljs-string\">&apos;&lt;esc&gt;`&lt;i&apos;</span><span class=\"hljs-symbol\">&lt;esc&gt;</span>\n<span class=\"hljs-keyword\">vnoremap</span> $<span class=\"hljs-keyword\">e</span> <span class=\"hljs-symbol\">&lt;esc&gt;</span>`&gt;<span class=\"hljs-keyword\">a</span><span class=\"hljs-string\">&quot;&lt;esc&gt;`&lt;i&quot;</span><span class=\"hljs-symbol\">&lt;esc&gt;</span></pre><h3>Command line mappings</h3>\n<p>$q is super useful when browsing on the command line. It deletes everything until the last slash:</p>\n<pre>cno <span class=\"hljs-variable\">$q</span> <span class=\"hljs-variable\">&lt;C-\\&gt;</span>eDeleteTillSlash()<span class=\"hljs-variable\">&lt;cr&gt;</span></pre><p>Bash like keys for the command line:</p>\n<pre><span class=\"hljs-keyword\">cnoremap</span> <span class=\"hljs-symbol\">&lt;C-A&gt;</span>        <span class=\"hljs-symbol\">&lt;Home&gt;</span>\n<span class=\"hljs-keyword\">cnoremap</span> <span class=\"hljs-symbol\">&lt;C-E&gt;</span>        <span class=\"hljs-symbol\">&lt;End&gt;</span>\n<span class=\"hljs-keyword\">cnoremap</span> <span class=\"hljs-symbol\">&lt;C-K&gt;</span>        <span class=\"hljs-symbol\">&lt;C-U&gt;</span>\n\n<span class=\"hljs-keyword\">cnoremap</span> <span class=\"hljs-symbol\">&lt;C-P&gt;</span> <span class=\"hljs-symbol\">&lt;Up&gt;</span>\n<span class=\"hljs-keyword\">cnoremap</span> <span class=\"hljs-symbol\">&lt;C-N&gt;</span> <span class=\"hljs-symbol\">&lt;Down&gt;</span></pre><p>Write the file as sudo (only on Unix). Super useful when you open a file and you don&apos;t have permissions to save your changes. <a href=\"http://vim.wikia.com/wiki/Su-write\">Vim tip</a>:</p>\n<pre><span class=\"hljs-symbol\">:W</span> </pre><h3>Spell checking</h3>\n<p>Pressing <code>&lt;leader&gt;ss</code> will toggle and untoggle spell checking</p>\n<pre><span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span>ss :<span class=\"hljs-keyword\">setlocal</span> spell!<span class=\"hljs-symbol\">&lt;cr&gt;</span></pre><p>Shortcuts using <code>&lt;leader&gt;</code> instead of special chars</p>\n<pre><span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-keyword\">sn</span> ]s\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-keyword\">sp</span> [s\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-keyword\">sa</span> zg\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span>s? <span class=\"hljs-keyword\">z</span>=</pre><h3>Cope</h3>\n<p>Do :help cope if you are unsure what cope is. It&apos;s super useful!</p>\n<p>When you search with vimgrep, display your results in cope by doing:\n<code>&lt;leader&gt;cc</code></p>\n<p>To go to the next search result do:\n<code>&lt;leader&gt;n</code></p>\n<p>To go to the previous search results do:\n<code>&lt;leader&gt;p</code></p>\n<p>Vimscript mappings:</p>\n<pre><span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-keyword\">cc</span> :<span class=\"hljs-keyword\">botright</span> <span class=\"hljs-keyword\">cope</span><span class=\"hljs-symbol\">&lt;cr&gt;</span>\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-keyword\">co</span> ggVGy:<span class=\"hljs-keyword\">tabnew</span><span class=\"hljs-symbol\">&lt;cr&gt;</span>:<span class=\"hljs-keyword\">set</span> <span class=\"hljs-keyword\">syntax</span>=qf<span class=\"hljs-symbol\">&lt;cr&gt;</span>pgg\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span>n :<span class=\"hljs-keyword\">cn</span><span class=\"hljs-symbol\">&lt;cr&gt;</span>\n<span class=\"hljs-keyword\">map</span> <span class=\"hljs-symbol\">&lt;leader&gt;</span><span class=\"hljs-keyword\">p</span> :<span class=\"hljs-keyword\">cp</span><span class=\"hljs-symbol\">&lt;cr&gt;</span></pre><h2>How to uninstall</h2>\n<p>Do following:</p>\n<ul>\n<li>Remove <code>~/.vim_runtime</code></li>\n<li>Remove any lines that refernce <code>.vim_runtime</code> in your <code>~/.vimrc</code></li>\n</ul>\n"
    },
    {
      "component": "footer",
      "links": [
        {
          "href": "https://github.com/AMCorvi/Corvi-Vim-Config",
          "text": "GitHub"
        },
        {
          "href": "https://github.com/AMCorvi",
          "text": "AMCorvi"
        }
      ]
    }
  ]
}